openapi: "3.1.0"
info:
  title: "stock API"
  description: "stock API"
  version: "1.0.0"
paths:
  /products:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetProductDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProductDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Product malformed"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetProductDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProductDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Product malformed"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetProductDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /products/{id}:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Id is not valid"
                Example#2:
                  value: "Missing id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetProductDto"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Id is not valid"
                Example#2:
                  value: "Missing id"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /product-category:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductCategory"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCategory"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Malformed category"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategory"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCategoryDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Malformed category"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategory"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /product-category/{id}:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategory"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /inventory:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetInventoryDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInventoryDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Inventory data malformed"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetInventoryDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInventoryDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Inventory data malformed"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetInventoryDto"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /inventory/product/{productId}:
    get:
      description: ""
      parameters:
        - name: "productId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Product id is not valid"
                Example#2:
                  value: "Missing product id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetInventoryDto"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /inventory/{id}:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Id is not valid"
                Example#2:
                  value: "Missing id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetInventoryDto"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Id is not valid"
                Example#2:
                  value: "Missing id"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    GetProductDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        sku:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        price:
          type: "integer"
          format: "int32"
        cost:
          type: "integer"
          format: "int32"
        categoryId:
          type: "integer"
          format: "int32"
      required:
        - "id"
        - "sku"
        - "name"
        - "description"
        - "price"
        - "cost"
        - "categoryId"
    PostProductDto:
      type: "object"
      properties:
        sku:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        price:
          type: "integer"
          format: "int32"
        cost:
          type: "integer"
          format: "int32"
        categoryId:
          type: "integer"
          format: "int32"
      required:
        - "sku"
        - "name"
        - "description"
        - "price"
        - "cost"
        - "categoryId"
    ProductCategory:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
      required:
        - "id"
        - "name"
        - "description"
    ProductCategoryDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
      required:
        - "name"
        - "description"
    GetInventoryDto:
      type: "object"
      properties:
        productId:
          type: "integer"
          format: "int32"
        quantity:
          type: "integer"
          format: "int32"
        minStock:
          type: "integer"
          format: "int32"
        location:
          type: "string"
        lastUpdated:
          type: "string"
          format: "date-time"
      required:
        - "productId"
        - "quantity"
        - "minStock"
        - "location"
        - "lastUpdated"
    PostInventoryDto:
      type: "object"
      properties:
        productId:
          type: "integer"
          format: "int32"
        quantity:
          type: "integer"
          format: "int32"
        minStock:
          type: "integer"
          format: "int32"
        location:
          type: "string"
      required:
        - "productId"
        - "quantity"
        - "minStock"
        - "location"